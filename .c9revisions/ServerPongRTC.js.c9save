{"ts":1354519138815,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":true,"ts":1354519140138,"patch":[[{"diffs":[[1,"var app = require('express').createServer();\nvar port = process.env.PORT || 3000;\napp.listen(port);console.log(' >>> Port: '+ port);\n\nvar webRTC = require('webrtc.io').listen(app);\n\napp.get('/examples/style.css', function(req, res) {\n    res.sendfile(__dirname + '/examples/style.css');\n}); \napp.get('/examples/webrtc.io.js', function(req, res) {\n\tres.sendfile(__dirname + '/node_modules/webrtc.io/node_modules/webrtc.io-client/lib/webrtc.io.js');\n});\n\n \nwebRTC.rtc.on('connect', function(rtc) {\n\t//Client connected\n\tconsole.log('client connected.');\n});\n\nwebRTC.rtc.on('send answer', function(rtc) {\n    console.log('client send answer');\n \t//answer sent\n});\n\nwebRTC.rtc.on('disconnect', function(rtc) {\n\tconsole.log('client disconnected');\n\t//Client disconnect \n});\n\nwebRTC.rtc.on('chat_msg', function(data, socket){\n    console.log('client chat_msg');\n  var roomList = webRTC.rtc.rooms[data.room] || [];\n\n  for (var i = 0; i < roomList.length; i++) {\n    var socketId = roomList[i];\n\n    if (socketId !== socket.id) {\n      var soc = webRTC.rtc.getSocket(socketId);\n\n      if (soc) {\n        soc.send(JSON.stringify({\n          \"eventName\": \"receive_chat_msg\",\n          \"data\": {\n            \"messages\": data.messages,\n            \"color\": data.color\n          }\n        }), function(error) {\n          if (error) {\n            console.log(error);\n          }\n        });\n      }\n    }\n  }\n});\n"]],"start1":0,"start2":0,"length1":0,"length2":1398}]],"length":1398,"saved":false}
{"contributors":[],"silentsave":true,"ts":1354578800045,"patch":[[{"diffs":[[0,");\n});\n\n"],[-1," \n"],[0,"webRTC.r"]],"start1":445,"start2":445,"length1":18,"length2":16},{"diffs":[[0,"nnected.');\n"],[1,"\t//if (start === false) startLoop();\n"],[0,"});\n\nwebRTC."]],"start1":537,"start2":537,"length1":24,"length2":61},{"diffs":[[0,"tion(rtc) {\n"],[1,"rtc.get\n"],[0,"    console."]],"start1":624,"start2":624,"length1":24,"length2":32},{"diffs":[[0,"onnect \n});\n"],[1,"/*\nvar racket1X, racket2X;\nvar ballX, ballZ;\nvar lastDate = new Date();*/\n/*"],[0,"\nwebRTC.rtc."]],"start1":799,"start2":799,"length1":24,"length2":100},{"diffs":[[0,"rtc.on('"],[-1,"chat_"],[0,"msg', fu"]],"start1":895,"start2":895,"length1":21,"length2":16},{"diffs":[[0,"t){\n"],[-1,"    console.log('client chat_msg');\n  var roomList = webRTC.rtc.rooms[data.room] || [];\n\n  "],[1,"\tvar roomList = webRTC.rtc.rooms[data.room] || [];\n//console.log(data.room + ': client chat_msg @ ' + data.time + ' / ' + data.pos);\n\tvar newDate = new Date();\n\tracket1X = data.headX;\n\t//console.log (newDate - lastDate);\n\t//console.log(socket.id);\n\tsocket.send(JSON.stringify({\n          \"eventName\": \"receive_msg\",\n          \"data\": {\n\t\t\t\"lcRtX\": racket1X,\n\t\t\t\"rmRtX\": racket2X,\n\t\t\t\"ballX\": ballX,\n\t\t\t\"ballZ\": ballZ,\n\t\t\t\"socket\": socket.id\n\t\t\t\n          }\n        }), function(error) {\n          if (error) {\n            console.log(error);\n          }\n        });\n\tlastDate = newDate;\n});\n*//*\nvar racket =  function () { this.x = 0; this.id = undefined; }\nvar rackets = [];*/\n\nwebRTC.rtc.on('msg', function(data, socket){\n\tvar roomList = webRTC.rtc.rooms[data.room] || [];\n\tvar localRacketX = data.headX;\n\tvar remoteRacketX = 0;\n\n\t"],[0,"for "]],"start1":929,"start2":929,"length1":99,"length2":842},{"diffs":[[0," i++) {\n"],[-1,"    "],[1,"\t\t"],[0,"var sock"]],"start1":1803,"start2":1803,"length1":20,"length2":18},{"diffs":[[0,"st[i];\n\n"],[-1,"    "],[1,"\t\t/*if (socketId === socket.id){\n\t\t\troomList[i].racket = 'dddf';//new racket();\n\t\t\tconsole.log(roomList[i].racket);\n\t\t}*/\n\t\t"],[0,"if (sock"]],"start1":1834,"start2":1834,"length1":20,"length2":140},{"diffs":[[0,"t.id) {\n"],[-1,"    "],[1,"\t\t"],[0,"  var so"]],"start1":1988,"start2":1988,"length1":20,"length2":18},{"diffs":[[0,"etId);\n\n"],[-1,"    "],[1,"\t\t"],[0,"  if (so"]],"start1":2035,"start2":2035,"length1":20,"length2":18},{"diffs":[[0,") {\n"],[-1,"        soc"],[1,"\t\t\tsocket"],[0,".sen"]],"start1":2054,"start2":2054,"length1":19,"length2":17},{"diffs":[[0,"stringify({\n"],[-1,"          "],[1,"\t\t\t\t"],[0,"\"eventName\":"]],"start1":2078,"start2":2078,"length1":34,"length2":28},{"diffs":[[0,"ive_"],[-1,"chat_"],[0,"msg\",\n"],[-1,"          \"data\": {\n            \"messages\": data.messages,\n            \"color\": data.color\n          }\n        "],[1,"\t\t\t\t\"data\": {\n\t\t\t\t\t//\"lcRtX\": racket1X,\n\t\t\t\t\t\"rmRtX\": data.headX/*,\n\t\t\t\t\t\"ballX\": ballX,\n\t\t\t\t\t\"ballZ\": ballZ,\n\t\t\t\t\t\"socket\": socket.id*/\n\t\t\t\t}\n\t\t\t}), function(error) {\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t}\n\t\t\t});\n\t\t  }\n\t\t}\n\t}\n});\n\n/*\nfunction startLoop () {\n\tstart = true;\n\twhile (start) {\n\t\tvar roomList = webRTC.rtc.rooms[data.room] || [];\n\t\tif (roomList.length === 0){\n\t\t\tstart = false;\n\t\t}\n\t\telse {\n\t\t\tfor (var i = 0; i < roomList.length; i++) {\n\t\t\t\tvar socketId = roomList[i];\n\n\t\t\t\tif (socketId !== socket.id) {\n\t\t\t\t  var soc = webRTC.rtc.getSocket(socketId);\n\n\t\t\t\t  if (soc) {\n\t\t\t\t\tsoc.send(JSON.stringify({\n\t\t\t\t\t  \"eventName\": \"receive_chat_msg\",\n\t\t\t\t\t  \"data\": {\n\t\t\t\t\t\t\"messages\": 1,\n\t\t\t\t\t\t\"color\": 2\n\t\t\t\t\t  }\n\t\t\t\t\t"],[0,"}), "]],"start1":2112,"start2":2112,"length1":130,"length2":747},{"diffs":[[0,"on(error) {\n"],[-1,"        "],[1,"\t\t\t\t\t"],[0,"  if (error)"]],"start1":2865,"start2":2865,"length1":32,"length2":29},{"diffs":[[0,"f (error) {\n"],[-1,"            "],[1,"\t\t\t\t\t\t"],[0,"console.log("]],"start1":2885,"start2":2885,"length1":36,"length2":30},{"diffs":[[0,"r);\n"],[-1,"          }\n        });\n      }\n    }\n  }\n});\n"],[1,"\t\t\t\t\t  }\n\t\t\t\t\t});\n\t\t\t\t  }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}*/"]],"start1":2919,"start2":2919,"length1":50,"length2":51}]],"length":2970,"saved":false}
{"ts":1354579462695,"patch":[[{"diffs":[[0,"oc) {\n\t\t\tsoc"],[-1,"ket"],[0,".send(JSON.s"]],"start1":2052,"start2":2052,"length1":27,"length2":24}]],"length":2967,"saved":false}
{"ts":1354579464990,"patch":[[{"diffs":[[0,"oc) {\n\t\t\tsoc"],[1,"ket"],[0,".send(JSON.s"]],"start1":2052,"start2":2052,"length1":24,"length2":27}]],"length":2970,"saved":false}
{"ts":1354579467398,"patch":[[{"diffs":[[0,");\n\n"],[-1,"app.get('/examples/style.css', function(req, res) {\n    res.sendfile(__dirname + '/examples/style.css');\n}); \n"],[1,"/*"],[0,"app."]],"start1":178,"start2":178,"length1":118,"length2":10},{"diffs":[[0,"io.js');\n});"],[-1,"\n"],[1,"*/\n\n "],[0,"\nwebRTC.rtc."]],"start1":331,"start2":331,"length1":25,"length2":29},{"diffs":[[0,"');\n"],[-1,"\t//if (start === false) startLoop();\n"],[0,"});\n"]],"start1":441,"start2":441,"length1":45,"length2":8},{"diffs":[[0,") {\n"],[-1,"rtc.get\n"],[0,"    "]],"start1":491,"start2":491,"length1":16,"length2":8},{"diffs":[[0,"});\n"],[-1,"/*\nvar racket1X, racket2X;\nvar ballX, ballZ;\nvar lastDate = new Date();*/\n/*"],[0,"\nweb"]],"start1":658,"start2":658,"length1":84,"length2":8},{"diffs":[[0,"\nwebRTC.rtc.on('"],[1,"chat_"],[0,"msg', function(d"]],"start1":662,"start2":662,"length1":32,"length2":37},{"diffs":[[0,"t){\n"],[-1,"\tvar roomList = webRTC.rtc.rooms[data.room] || [];\n//console.log(data.room + ': client chat_msg @ ' + data.time + ' / ' + data.pos);\n\tvar newDate = new Date();\n\tracket1X = data.headX;\n\t//console.log (newDate - lastDate);\n\t//console.log(socket.id);\n\tsocket.send(JSON.stringify({\n          \"eventName\": \"receive_msg\",\n          \"data\": {\n\t\t\t\"lcRtX\": racket1X,\n\t\t\t\"rmRtX\": racket2X,\n\t\t\t\"ballX\": ballX,\n\t\t\t\"ballZ\": ballZ,\n\t\t\t\"socket\": socket.id\n\t\t\t\n          }\n        }), function(error) {\n          if (error) {\n            console.log(error);\n          }\n        });\n\tlastDate = newDate;\n});\n*//*\nvar racket =  function () { this.x = 0; this.id = undefined; }\nvar rackets = [];*/\n\nwebRTC.rtc.on('msg', function(data, socket){\n\tvar roomList = webRTC.rtc.rooms[data.room] || [];\n\tvar localRacketX = data.headX;\n\tvar remoteRacketX = 0;\n\n\t"],[1,"    console.log('client chat_msg');\n  var roomList = webRTC.rtc.rooms[data.room] || [];\n\n  "],[0,"for "]],"start1":709,"start2":709,"length1":842,"length2":99},{"diffs":[[0,"gth; i++) {\n"],[-1,"\t\t"],[1,"    "],[0,"var socketId"]],"start1":836,"start2":836,"length1":26,"length2":28},{"diffs":[[0,"];\n\n"],[-1,"\t\t/*if (socketId === socket.id){\n\t\t\troomList[i].racket = 'dddf';//new racket();\n\t\t\tconsole.log(roomList[i].racket);\n\t\t}*/\n\t\t"],[1,"    "],[0,"if ("]],"start1":877,"start2":877,"length1":132,"length2":12},{"diffs":[[0,"t.id) {\n"],[-1,"\t\t"],[1,"    "],[0,"  var so"]],"start1":907,"start2":907,"length1":18,"length2":20},{"diffs":[[0,"etId);\n\n"],[-1,"\t\t"],[1,"    "],[0,"  if (so"]],"start1":956,"start2":956,"length1":18,"length2":20},{"diffs":[[0,") {\n"],[-1,"\t\t\tsocket"],[1,"        soc"],[0,".sen"]],"start1":977,"start2":977,"length1":17,"length2":19},{"diffs":[[0,"ngify({\n"],[-1,"\t\t\t\t"],[1,"          "],[0,"\"eventNa"]],"start1":1007,"start2":1007,"length1":20,"length2":26},{"diffs":[[0,"ive_"],[1,"chat_"],[0,"msg\",\n"],[-1,"\t\t\t\t\"data\": {\n\t\t\t\t\t//\"lcRtX\": racket1X,\n\t\t\t\t\t\"rmRtX\": data.headX/*,\n\t\t\t\t\t\"ballX\": ballX,\n\t\t\t\t\t\"ballZ\": ballZ,\n\t\t\t\t\t\"socket\": socket.id*/\n\t\t\t\t}\n\t\t\t}), function(error) {\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t}\n\t\t\t});\n\t\t  }\n\t\t}\n\t}\n});\n\n/*\nfunction startLoop () {\n\tstart = true;\n\twhile (start) {\n\t\tvar roomList = webRTC.rtc.rooms[data.room] || [];\n\t\tif (roomList.length === 0){\n\t\t\tstart = false;\n\t\t}\n\t\telse {\n\t\t\tfor (var i = 0; i < roomList.length; i++) {\n\t\t\t\tvar socketId = roomList[i];\n\n\t\t\t\tif (socketId !== socket.id) {\n\t\t\t\t  var soc = webRTC.rtc.getSocket(socketId);\n\n\t\t\t\t  if (soc) {\n\t\t\t\t\tsoc.send(JSON.stringify({\n\t\t\t\t\t  \"eventName\": \"receive_chat_msg\",\n\t\t\t\t\t  \"data\": {\n\t\t\t\t\t\t\"messages\": 1,\n\t\t\t\t\t\t\"color\": 2\n\t\t\t\t\t  }\n\t\t\t\t\t"],[1,"          \"data\": {\n            \"messages\": data.messages,\n            \"color\": data.color\n          }\n        "],[0,"}), "]],"start1":1043,"start2":1043,"length1":747,"length2":130},{"diffs":[[0,"rror) {\n"],[-1,"\t\t\t\t\t"],[1,"        "],[0,"  if (er"]],"start1":1183,"start2":1183,"length1":21,"length2":24},{"diffs":[[0,") {\n"],[-1,"\t\t\t\t\t\t"],[1,"            "],[0,"cons"]],"start1":1210,"start2":1210,"length1":14,"length2":20},{"diffs":[[0,"r);\n"],[-1,"\t\t\t\t\t  }\n\t\t\t\t\t});\n\t\t\t\t  }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}*/"],[1,"          }\n        });\n      }\n    }\n  }\n});\n"]],"start1":1242,"start2":1242,"length1":51,"length2":50}]],"length":1292,"saved":false}
{"ts":1354579492840,"patch":[[{"diffs":[[0,");\n\n"],[-1,"/*"],[1,"app.get('/examples/style.css', function(req, res) {\n    res.sendfile(__dirname + '/examples/style.css');\n}); \n"],[0,"app."]],"start1":178,"start2":178,"length1":10,"length2":118},{"diffs":[[0,"\n});"],[-1,"*/\n\n "],[1,"\n"],[0,"\nweb"]],"start1":447,"start2":447,"length1":13,"length2":9},{"diffs":[[0,"nnected.');\n"],[1,"\t//if (start === false) startLoop();\n"],[0,"});\n\nwebRTC."]],"start1":537,"start2":537,"length1":24,"length2":61},{"diffs":[[0,"tion(rtc) {\n"],[1,"rtc.get\n"],[0,"    console."]],"start1":624,"start2":624,"length1":24,"length2":32},{"diffs":[[0,"onnect \n});\n"],[1,"/*\nvar racket1X, racket2X;\nvar ballX, ballZ;\nvar lastDate = new Date();*/\n/*"],[0,"\nwebRTC.rtc."]],"start1":799,"start2":799,"length1":24,"length2":100},{"diffs":[[0,"rtc.on('"],[-1,"chat_"],[0,"msg', fu"]],"start1":895,"start2":895,"length1":21,"length2":16},{"diffs":[[0,"t){\n"],[-1,"    console.log('client chat_msg');\n  var roomList = webRTC.rtc.rooms[data.room] || [];\n\n  "],[1,"\tvar roomList = webRTC.rtc.rooms[data.room] || [];\n//console.log(data.room + ': client chat_msg @ ' + data.time + ' / ' + data.pos);\n\tvar newDate = new Date();\n\tracket1X = data.headX;\n\t//console.log (newDate - lastDate);\n\t//console.log(socket.id);\n\tsocket.send(JSON.stringify({\n          \"eventName\": \"receive_msg\",\n          \"data\": {\n\t\t\t\"lcRtX\": racket1X,\n\t\t\t\"rmRtX\": racket2X,\n\t\t\t\"ballX\": ballX,\n\t\t\t\"ballZ\": ballZ,\n\t\t\t\"socket\": socket.id\n\t\t\t\n          }\n        }), function(error) {\n          if (error) {\n            console.log(error);\n          }\n        });\n\tlastDate = newDate;\n});\n*//*\nvar racket =  function () { this.x = 0; this.id = undefined; }\nvar rackets = [];*/\n\nwebRTC.rtc.on('msg', function(data, socket){\n\tvar roomList = webRTC.rtc.rooms[data.room] || [];\n\tvar localRacketX = data.headX;\n\tvar remoteRacketX = 0;\n\n\t"],[0,"for "]],"start1":929,"start2":929,"length1":99,"length2":842},{"diffs":[[0," i++) {\n"],[-1,"    "],[1,"\t\t"],[0,"var sock"]],"start1":1803,"start2":1803,"length1":20,"length2":18},{"diffs":[[0,"st[i];\n\n"],[-1,"    "],[1,"\t\t/*if (socketId === socket.id){\n\t\t\troomList[i].racket = 'dddf';//new racket();\n\t\t\tconsole.log(roomList[i].racket);\n\t\t}*/\n\t\t"],[0,"if (sock"]],"start1":1834,"start2":1834,"length1":20,"length2":140},{"diffs":[[0,"t.id) {\n"],[-1,"    "],[1,"\t\t"],[0,"  var so"]],"start1":1988,"start2":1988,"length1":20,"length2":18},{"diffs":[[0,"etId);\n\n"],[-1,"    "],[1,"\t\t"],[0,"  if (so"]],"start1":2035,"start2":2035,"length1":20,"length2":18},{"diffs":[[0,"(soc) {\n"],[-1,"        "],[1,"\t\t\t"],[0,"soc.send"]],"start1":2050,"start2":2050,"length1":24,"length2":19},{"diffs":[[0,"stringify({\n"],[-1,"          "],[1,"\t\t\t\t"],[0,"\"eventName\":"]],"start1":2075,"start2":2075,"length1":34,"length2":28},{"diffs":[[0,"ive_"],[-1,"chat_"],[0,"msg\",\n"],[-1,"          \"data\": {\n            \"messages\": data.messages,\n            \"color\": data.color\n          }\n        "],[1,"\t\t\t\t\"data\": {\n\t\t\t\t\t//\"lcRtX\": racket1X,\n\t\t\t\t\t\"rmRtX\": data.headX/*,\n\t\t\t\t\t\"ballX\": ballX,\n\t\t\t\t\t\"ballZ\": ballZ,\n\t\t\t\t\t\"socket\": socket.id*/\n\t\t\t\t}\n\t\t\t}), function(error) {\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t}\n\t\t\t});\n\t\t  }\n\t\t}\n\t}\n});\n\n/*\nfunction startLoop () {\n\tstart = true;\n\twhile (start) {\n\t\tvar roomList = webRTC.rtc.rooms[data.room] || [];\n\t\tif (roomList.length === 0){\n\t\t\tstart = false;\n\t\t}\n\t\telse {\n\t\t\tfor (var i = 0; i < roomList.length; i++) {\n\t\t\t\tvar socketId = roomList[i];\n\n\t\t\t\tif (socketId !== socket.id) {\n\t\t\t\t  var soc = webRTC.rtc.getSocket(socketId);\n\n\t\t\t\t  if (soc) {\n\t\t\t\t\tsoc.send(JSON.stringify({\n\t\t\t\t\t  \"eventName\": \"receive_chat_msg\",\n\t\t\t\t\t  \"data\": {\n\t\t\t\t\t\t\"messages\": 1,\n\t\t\t\t\t\t\"color\": 2\n\t\t\t\t\t  }\n\t\t\t\t\t"],[0,"}), "]],"start1":2109,"start2":2109,"length1":130,"length2":747},{"diffs":[[0,"on(error) {\n"],[-1,"        "],[1,"\t\t\t\t\t"],[0,"  if (error)"]],"start1":2862,"start2":2862,"length1":32,"length2":29},{"diffs":[[0,"f (error) {\n"],[-1,"            "],[1,"\t\t\t\t\t\t"],[0,"console.log("]],"start1":2882,"start2":2882,"length1":36,"length2":30},{"diffs":[[0,"r);\n"],[-1,"          }\n        });\n      }\n    }\n  }\n});\n"],[1,"\t\t\t\t\t  }\n\t\t\t\t\t});\n\t\t\t\t  }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}*/"]],"start1":2916,"start2":2916,"length1":50,"length2":51}]],"length":2967,"saved":false}
