{"ts":1354519138815,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":true,"ts":1354519140138,"patch":[[{"diffs":[[1,"var app = require('express').createServer();\nvar port = process.env.PORT || 3000;\napp.listen(port);console.log(' >>> Port: '+ port);\n\nvar webRTC = require('webrtc.io').listen(app);\n\napp.get('/examples/style.css', function(req, res) {\n    res.sendfile(__dirname + '/examples/style.css');\n}); \napp.get('/examples/webrtc.io.js', function(req, res) {\n\tres.sendfile(__dirname + '/node_modules/webrtc.io/node_modules/webrtc.io-client/lib/webrtc.io.js');\n});\n\n \nwebRTC.rtc.on('connect', function(rtc) {\n\t//Client connected\n\tconsole.log('client connected.');\n});\n\nwebRTC.rtc.on('send answer', function(rtc) {\n    console.log('client send answer');\n \t//answer sent\n});\n\nwebRTC.rtc.on('disconnect', function(rtc) {\n\tconsole.log('client disconnected');\n\t//Client disconnect \n});\n\nwebRTC.rtc.on('chat_msg', function(data, socket){\n    console.log('client chat_msg');\n  var roomList = webRTC.rtc.rooms[data.room] || [];\n\n  for (var i = 0; i < roomList.length; i++) {\n    var socketId = roomList[i];\n\n    if (socketId !== socket.id) {\n      var soc = webRTC.rtc.getSocket(socketId);\n\n      if (soc) {\n        soc.send(JSON.stringify({\n          \"eventName\": \"receive_chat_msg\",\n          \"data\": {\n            \"messages\": data.messages,\n            \"color\": data.color\n          }\n        }), function(error) {\n          if (error) {\n            console.log(error);\n          }\n        });\n      }\n    }\n  }\n});\n"]],"start1":0,"start2":0,"length1":0,"length2":1398}]],"length":1398,"saved":false}
