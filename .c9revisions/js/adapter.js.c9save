{"ts":1354030593768,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":true,"ts":1354030603854,"patch":[[{"diffs":[[1,"var RTCPeerConnection = null;\r\nvar getUserMedia = null;\r\nvar attachMediaStream = null;\r\n\r\nif (navigator.mozGetUserMedia) {\r\n  console.log(\"This appears to be Firefox\");\r\n\r\n  // The RTCPeerConnection object.\r\n  RTCPeerConnection = mozRTCPeerConnection;\r\n\r\n  // Get UserMedia (only difference is the prefix).\r\n  // Code from Adam Barth.\r\n  getUserMedia = navigator.mozGetUserMedia.bind(navigator);\r\n\r\n  // Attach a media stream to an element.\r\n  attachMediaStream = function(element, stream) {\r\n    console.log(\"Attaching media stream\");\r\n    element.mozSrcObject = stream;\r\n    element.play();\r\n  };\r\n} else if (navigator.webkitGetUserMedia) {\r\n  console.log(\"This appears to be Chrome\");\r\n\r\n  // The RTCPeerConnection object.\r\n  RTCPeerConnection = webkitRTCPeerConnection;\r\n  \r\n  // Get UserMedia (only difference is the prefix).\r\n  // Code from Adam Barth.\r\n  getUserMedia = navigator.webkitGetUserMedia.bind(navigator);\r\n\r\n  // Attach a media stream to an element.\r\n  attachMediaStream = function(element, stream) {\r\n    element.src = webkitURL.createObjectURL(stream);\r\n  };\r\n} else {\r\n  console.log(\"Browser does not appear to be WebRTC-capable\");\r\n}"]],"start1":0,"start2":0,"length1":0,"length2":1155}]],"length":1155,"saved":false}
{"contributors":[],"silentsave":true,"ts":1354727301912,"patch":[[{"diffs":[[0,"y();\r\n  };\r\n"],[1,"  alert()\r\n"],[0,"} else if (n"]],"start1":588,"start2":588,"length1":24,"length2":35}]],"length":1166,"saved":false}
{"ts":1354727304146,"patch":[[{"diffs":[[0,"  alert("],[1,"'Please us'"],[0,")\r\n} els"]],"start1":600,"start2":600,"length1":16,"length2":27}]],"length":1177,"saved":false}
{"ts":1354727306077,"patch":[[{"diffs":[[0,"lease us"],[1,"e chrome "],[0,"')\r\n} el"]],"start1":610,"start2":610,"length1":16,"length2":25}]],"length":1186,"saved":false}
{"ts":1354727307870,"patch":[[{"diffs":[[0,"e chrome"],[-1," "],[0,"')\r\n} el"]],"start1":618,"start2":618,"length1":17,"length2":16}]],"length":1185,"saved":false}
{"ts":1354727310989,"patch":[[{"diffs":[[0,"ase use "],[-1,"c"],[1,"C"],[0,"hrome')\r"]],"start1":612,"start2":612,"length1":17,"length2":17}]],"length":1185,"saved":false}
{"ts":1354727316103,"patch":[[{"diffs":[[0,"Chrome')"],[1,";"],[0,"\r\n} else"]],"start1":620,"start2":620,"length1":16,"length2":17}]],"length":1186,"saved":false}
{"ts":1354727321383,"patch":[[{"diffs":[[0,"capable\");\r\n"],[1,"  alert('Please use Chrome');\r\n"],[0,"}"]],"start1":1173,"start2":1173,"length1":13,"length2":44}]],"length":1217,"saved":false}
{"ts":1354727340787,"patch":[[{"diffs":[[0,"le\");\r\n  alert('"],[1,"Browser does not appear to be WebRTC-capable"],[0,"Please use Chrom"]],"start1":1178,"start2":1178,"length1":32,"length2":76}]],"length":1261,"saved":false}
{"ts":1354727353383,"patch":[[{"diffs":[[0,"-capable"],[1,"\\n"],[0,"Please u"]],"start1":1230,"start2":1230,"length1":16,"length2":18}]],"length":1263,"saved":false}
{"ts":1354727375098,"patch":[[{"diffs":[[0,"ble\\nPlease use "],[1,"last versi"],[0,"Chrome');\r\n}"]],"start1":1235,"start2":1235,"length1":28,"length2":38}]],"length":1273,"saved":false}
{"ts":1354727376662,"patch":[[{"diffs":[[0,"st versi"],[1,"on o"],[0,"Chrome')"]],"start1":1253,"start2":1253,"length1":16,"length2":20}]],"length":1277,"saved":false}
{"ts":1354727378334,"patch":[[{"diffs":[[0,"ersion o"],[1,"f "],[0,"Chrome')"]],"start1":1257,"start2":1257,"length1":16,"length2":18}]],"length":1279,"saved":false}
{"ts":1354727388124,"patch":[[{"diffs":[[0," alert('"],[-1,"Please use"],[1,"Browser does not appear to be WebRTC-capable\\nPlease use last version of"],[0," Chrome'"]],"start1":601,"start2":601,"length1":26,"length2":88}]],"length":1341,"saved":false}
