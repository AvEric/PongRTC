{"ts":1354030593768,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":true,"ts":1354030603854,"patch":[[{"diffs":[[1,"var RTCPeerConnection = null;\r\nvar getUserMedia = null;\r\nvar attachMediaStream = null;\r\n\r\nif (navigator.mozGetUserMedia) {\r\n  console.log(\"This appears to be Firefox\");\r\n\r\n  // The RTCPeerConnection object.\r\n  RTCPeerConnection = mozRTCPeerConnection;\r\n\r\n  // Get UserMedia (only difference is the prefix).\r\n  // Code from Adam Barth.\r\n  getUserMedia = navigator.mozGetUserMedia.bind(navigator);\r\n\r\n  // Attach a media stream to an element.\r\n  attachMediaStream = function(element, stream) {\r\n    console.log(\"Attaching media stream\");\r\n    element.mozSrcObject = stream;\r\n    element.play();\r\n  };\r\n} else if (navigator.webkitGetUserMedia) {\r\n  console.log(\"This appears to be Chrome\");\r\n\r\n  // The RTCPeerConnection object.\r\n  RTCPeerConnection = webkitRTCPeerConnection;\r\n  \r\n  // Get UserMedia (only difference is the prefix).\r\n  // Code from Adam Barth.\r\n  getUserMedia = navigator.webkitGetUserMedia.bind(navigator);\r\n\r\n  // Attach a media stream to an element.\r\n  attachMediaStream = function(element, stream) {\r\n    element.src = webkitURL.createObjectURL(stream);\r\n  };\r\n} else {\r\n  console.log(\"Browser does not appear to be WebRTC-capable\");\r\n}"]],"start1":0,"start2":0,"length1":0,"length2":1155}]],"length":1155,"saved":false}
