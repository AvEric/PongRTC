{"ts":1354571067210,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"//SERVER\nvar WebSocketServer = require('ws').Server\n\nvar iolog = function() {};\n\nfor (var i = 0; i < process.argv.length; i++) {\n  var arg = process.argv[i];\n  if (arg === \"-debug\") {\n    iolog = function(msg) {\n      console.log(msg)\n    }\n    console.log('Debug mode on!');\n  }\n}\n\n\n// Used for callback publish and subscribe\nif (typeof rtc === \"undefined\") {\n  var rtc = {};\n}\n//Array to store connections\nrtc.sockets = [];\n\nrtc.rooms = {};\n\n// Holds callbacks for certain events.\nrtc._events = {};\n\nrtc.on = function(eventName, callback) {\n  rtc._events[eventName] = rtc._events[eventName] || [];\n  rtc._events[eventName].push(callback);\n};\n\nrtc.fire = function(eventName, _) {\n  var events = rtc._events[eventName];\n  var args = Array.prototype.slice.call(arguments, 1);\n\n  if (!events) {\n    return;\n  }\n\n  for (var i = 0, len = events.length; i < len; i++) {\n    events[i].apply(null, args);\n  }\n};\n\nmodule.exports.listen = function(server) {\n  var manager;\n  if (typeof server === 'number') { \n    manager = new WebSocketServer({\n        port: server\n      });\n  } else {\n    manager = new WebSocketServer({\n      server: server\n    });\n  }\n\n  manager.rtc = rtc;\n  attachEvents(manager);\n  return manager;\n};\n\nfunction attachEvents(manager) {\n\n  manager.on('connection', function(socket) {\n    iolog('connect');\n\n    socket.id = id();\n    iolog('new socket got id: ' + socket.id);\n\n    rtc.sockets.push(socket);\n\n    socket.on('message', function(msg) {\n      var json = JSON.parse(msg);\n      rtc.fire(json.eventName, json.data, socket);\n    });\n\n    socket.on('close', function() {\n      iolog('close');\n\n      // find socket to remove\n      var i = rtc.sockets.indexOf(socket);\n      // remove socket\n      rtc.sockets.splice(i, 1);\n\n      // remove from rooms and send remove_peer_connected to all sockets in room\n      for (var key in rtc.rooms) {\n\n        var room = rtc.rooms[key];\n        var exist = room.indexOf(socket.id);\n\n        if (exist !== -1) {\n          room.splice(room.indexOf(socket.id), 1);\n          for (var j = 0; j < room.length; j++) {\n            console.log(room[j]);\n            var soc = rtc.getSocket(room[j]);\n            soc.send(JSON.stringify({\n              \"eventName\": \"remove_peer_connected\",\n              \"data\": {\n                \"socketId\": socket.id\n              }\n            }), function(error) {\n              if (error) {\n                console.log(error);\n              }\n            });\n          }\n          break;\n        }\n      }\n      // call the disconnect callback\n      rtc.fire('disconnect', rtc);\n\n    });\n\n    // call the connect callback\n    rtc.fire('connect', rtc);\n\n  });\n\n  // manages the built-in room functionality\n  rtc.on('join_room', function(data, socket) {\n    iolog('join_room');\n\n    var connectionsId = [];\n    var roomList = rtc.rooms[data.room] || [];\n\n    roomList.push(socket.id);\n    rtc.rooms[data.room] = roomList;\n\n\n    for (var i = 0; i < roomList.length; i++) {\n      var id = roomList[i];\n\n      if (id == socket.id) {\n        continue;\n      } else {\n\n        connectionsId.push(id);\n        var soc = rtc.getSocket(id);\n\n        // inform the peers that they have a new peer\n        if (soc) {\n          soc.send(JSON.stringify({\n            \"eventName\": \"new_peer_connected\",\n            \"data\":{\n              \"socketId\": socket.id\n            }\n          }), function(error) {\n            if (error) {\n              console.log(error);\n            }\n          });\n        }\n      }\n    }\n    // send new peer a list of all prior peers\n    socket.send(JSON.stringify({\n      \"eventName\": \"get_peers\",\n      \"data\": {\n        \"connections\": connectionsId\n      }\n    }), function(error) {\n      if (error) {\n        console.log(error);\n      }\n    });\n  });\n\n  //Receive ICE candidates and send to the correct socket\n  rtc.on('send_ice_candidate', function(data, socket) {\n    iolog('send_ice_candidate');\n    var soc = rtc.getSocket(data.socketId);\n\n    if (soc) {\n      soc.send(JSON.stringify({\n        \"eventName\": \"receive_ice_candidate\",\n        \"data\": {\n          \"label\": data.label,\n          \"candidate\": data.candidate,\n          \"socketId\": socket.id\n        }\n      }), function(error) {\n        if (error) {\n          console.log(error);\n        }\n      });\n\n      // call the 'recieve ICE candidate' callback\n      rtc.fire('receive ice candidate', rtc);\n    }\n  });\n\n  //Receive offer and send to correct socket\n  rtc.on('send_offer', function(data, socket) {\n    iolog('send_offer');\n    var soc = rtc.getSocket(data.socketId);\n\n    if (soc) {\n      soc.send(JSON.stringify({\n        \"eventName\": \"receive_offer\",\n        \"data\": {\n          \"sdp\": data.sdp,\n          \"socketId\": socket.id\n      }\n      }), function(error) {\n        if (error) {\n          console.log(error);\n        }\n      });\n    }\n    // call the 'send offer' callback\n    rtc.fire('send offer', rtc);\n  });\n\n  //Receive answer and send to correct socket\n  rtc.on('send_answer', function(data, socket) {\n    iolog('send_answer');\n    var soc = rtc.getSocket( data.socketId);\n\n    if (soc) {\n      soc.send(JSON.stringify({\n        \"eventName\": \"receive_answer\",\n        \"data\" : {\n          \"sdp\": data.sdp,\n          \"socketId\": socket.id\n        }\n      }), function(error) {\n        if (error) {\n          console.log(error);\n        }\n      });\n      rtc.fire('send answer', rtc);\n    }\n  });\n}\n\n// generate a 4 digit hex code randomly\n\n\nfunction S4() {\n  return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n}\n\n// make a REALLY COMPLICATED AND RANDOM id, kudos to dennis\n\n\nfunction id() {\n  return (S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + S4() + S4());\n}\n\nrtc.getSocket = function(id) {\n  var connections = rtc.sockets;\n  if (!connections) {\n    // TODO: Or error, or customize\n    return;\n  }\n\n  for (var i = 0; i < connections.length; i++) {\n    var socket = connections[i];\n    if (id === socket.id) {\n      return socket;\n    }\n  }\n}\n"]],"start1":0,"start2":0,"length1":0,"length2":5980}]],"length":5980}
{"contributors":[],"silentsave":true,"ts":1354577252727,"patch":[[{"diffs":[[0,"omList.push("],[1,"new s"],[0,"socket.id);\n"]],"start1":2848,"start2":2848,"length1":24,"length2":29}]],"length":5985,"saved":false}
{"ts":1354577254293,"patch":[[{"diffs":[[0,"sh(new s"],[1,"trinf"],[0,"socket.i"]],"start1":2857,"start2":2857,"length1":16,"length2":21}]],"length":5990,"saved":false}
{"ts":1354577255573,"patch":[[{"diffs":[[0,"ew strin"],[-1,"f"],[1,"g("],[0,"socket.i"]],"start1":2861,"start2":2861,"length1":17,"length2":18}]],"length":5991,"saved":false}
{"ts":1354577260201,"patch":[[{"diffs":[[0,"cket.id)"],[1,")"],[0,";\n    rt"]],"start1":2873,"start2":2873,"length1":16,"length2":17}]],"length":5992,"saved":false}
{"ts":1354577298001,"patch":[[{"diffs":[[0,"ush(new "],[-1,"s"],[1,"S"],[0,"tring(so"]],"start1":2856,"start2":2856,"length1":17,"length2":17}]],"length":5992,"saved":false}
{"ts":1354577316251,"patch":[[{"diffs":[[0,"ush("],[-1,"new String("],[0,"sock"]],"start1":2856,"start2":2856,"length1":19,"length2":8}]],"length":5981,"saved":false}
{"ts":1354577316950,"patch":[[{"diffs":[[0,"cket.id)"],[-1,")"],[0,";\n    rt"]],"start1":2862,"start2":2862,"length1":17,"length2":16}]],"length":5980,"saved":false}
{"ts":1354578137479,"patch":[[{"diffs":[[0,"onality\n"],[1,"  "],[0,"  rtc.on"]],"start1":2686,"start2":2686,"length1":16,"length2":18}]],"length":5982,"saved":false}
{"contributors":[],"silentsave":true,"ts":1354600067035,"patch":[[{"diffs":[[0,"data, socket) {\n"],[1,"      offer\n"],[0,"    iolog('send_"]],"start1":4464,"start2":4464,"length1":32,"length2":44}]],"length":5994,"saved":false}
{"ts":1354600076991,"patch":[[{"diffs":[[0,"{\n      "],[-1,"offer"],[1,"ca"],[0,"\n    iol"]],"start1":4478,"start2":4478,"length1":21,"length2":18}]],"length":5991,"saved":false}
{"ts":1354600080949,"patch":[[{"diffs":[[0,"      ca"],[1,"ller ="],[0,"\n    iol"]],"start1":4480,"start2":4480,"length1":16,"length2":22}]],"length":5997,"saved":false}
{"ts":1354600081935,"patch":[[{"diffs":[[0,"caller ="],[1," f"],[0,"\n    iol"]],"start1":4486,"start2":4486,"length1":16,"length2":18}]],"length":5999,"saved":false}
{"ts":1354600083288,"patch":[[{"diffs":[[0,"ller = f"],[1,"als"],[0,"\n    iol"]],"start1":4488,"start2":4488,"length1":16,"length2":19}]],"length":6002,"saved":false}
{"ts":1354600084319,"patch":[[{"diffs":[[0,"r = fals"],[1,"e"],[0,"\n    iol"]],"start1":4491,"start2":4491,"length1":16,"length2":17}]],"length":6003,"saved":false}
{"ts":1354600085374,"patch":[[{"diffs":[[0," = false"],[1,";"],[0,"\n    iol"]],"start1":4492,"start2":4492,"length1":16,"length2":17}]],"length":6004,"saved":false}
{"ts":1354600087537,"patch":[[{"diffs":[[0,") {\n    "],[-1,"  "],[0,"caller ="]],"start1":4476,"start2":4476,"length1":18,"length2":16}]],"length":6002,"saved":false}
{"ts":1354600089097,"patch":[[{"diffs":[[0,") {\n    "],[1,"is"],[0,"caller ="]],"start1":4476,"start2":4476,"length1":16,"length2":18}]],"length":6004,"saved":false}
{"ts":1354600091695,"patch":[[{"diffs":[[0,"{\n    is"],[-1,"c"],[1,"C"],[0,"aller = "]],"start1":4478,"start2":4478,"length1":17,"length2":17}]],"length":6004,"saved":false}
{"ts":1354600121391,"patch":[[{"diffs":[[0,"\n  }\n}\n\n"],[1,"var isCaller\n"],[0,"\n// Used"]],"start1":275,"start2":275,"length1":16,"length2":29}]],"length":6017,"saved":false}
{"ts":1354600123444,"patch":[[{"diffs":[[0,"isCaller"],[1," = true"],[0,"\n\n// Use"]],"start1":287,"start2":287,"length1":16,"length2":23}]],"length":6024,"saved":false}
{"ts":1354600124492,"patch":[[{"diffs":[[0,"r = true"],[1,";"],[0,"\n\n// Use"]],"start1":294,"start2":294,"length1":16,"length2":17}]],"length":6025,"saved":false}
{"ts":1354600510549,"patch":[[{"diffs":[[0,"\n}\n\n"],[-1,"var isCaller = true;\n"],[0,"\n// "]],"start1":279,"start2":279,"length1":29,"length2":8}]],"length":6004,"saved":false}
{"ts":1354600511838,"patch":[[{"diffs":[[0,"\n  }\n}\n\n"],[-1,"\n"],[0,"// Used "]],"start1":275,"start2":275,"length1":17,"length2":16}]],"length":6003,"saved":false}
{"ts":1354600519983,"patch":[[{"diffs":[[0," socket) {\n "],[1,"//"],[0,"   isCaller "]],"start1":4468,"start2":4468,"length1":24,"length2":26}]],"length":6005,"saved":false}
{"ts":1354600746955,"patch":[[{"diffs":[[0,"\n  }\n}\n\n"],[1,"var isCaller = true;\n\n"],[0,"// Used "]],"start1":275,"start2":275,"length1":16,"length2":38},{"diffs":[[0,"ket) {\n "],[-1,"//"],[0,"   isCal"]],"start1":4494,"start2":4494,"length1":18,"length2":16}]],"length":6025,"saved":false}
{"ts":1354600854462,"patch":[[{"diffs":[[0,"\n  }\n}\n\n"],[-1,"var "],[1,"rtc"],[0,"isCaller"]],"start1":275,"start2":275,"length1":20,"length2":19}]],"length":6024,"saved":false}
{"ts":1354600856070,"patch":[[{"diffs":[[0,"}\n}\n\nrtc"],[1,"."],[0,"isCaller"]],"start1":278,"start2":278,"length1":16,"length2":17}]],"length":6025,"saved":false}
{"ts":1354600880098,"patch":[[{"diffs":[[0,") {\n    "],[1,"rtc.isCalle"],[0,"isCaller"]],"start1":4497,"start2":4497,"length1":16,"length2":27}]],"length":6036,"saved":false}
{"ts":1354600885082,"patch":[[{"diffs":[[0,"    rtc."],[-1,"isCalle"],[0,"isCaller"]],"start1":4501,"start2":4501,"length1":23,"length2":16}]],"length":6029,"saved":false}
{"ts":1354601201926,"patch":[[{"diffs":[[0,"r = "],[-1,"false"],[1,"0"],[0,";\n  "]],"start1":4516,"start2":4516,"length1":13,"length2":9}]],"length":6025,"saved":false}
{"ts":1354601211142,"patch":[[{"diffs":[[0,"r = "],[-1,"true"],[1,"1"],[0,";\n\n/"]],"start1":294,"start2":294,"length1":12,"length2":9}]],"length":6022,"saved":false}
{"ts":1354601225677,"patch":[[{"diffs":[[0,"ler = 1;"],[1,"\nconsole"],[0,"\n\n// Use"]],"start1":292,"start2":292,"length1":16,"length2":24}]],"length":6030,"saved":false}
{"ts":1354601226010,"patch":[[{"diffs":[[0,"\nconsole"],[1,"()"],[0,"\n\n// Use"]],"start1":300,"start2":300,"length1":16,"length2":18}]],"length":6032,"saved":false}
{"ts":1354601227359,"patch":[[{"diffs":[[0,"console("],[1,"log"],[0,")\n\n// Us"]],"start1":301,"start2":301,"length1":16,"length2":19}]],"length":6035,"saved":false}
{"ts":1354601230774,"patch":[[{"diffs":[[0,"sole"],[-1,"(log)"],[1,"."],[0,"\n\n//"]],"start1":304,"start2":304,"length1":13,"length2":9}]],"length":6031,"saved":false}
{"ts":1354601231338,"patch":[[{"diffs":[[0,"console."],[1,"lo"],[0,"\n\n// Use"]],"start1":301,"start2":301,"length1":16,"length2":18}]],"length":6033,"saved":false}
{"ts":1354601231984,"patch":[[{"diffs":[[0,"nsole.lo"],[1,"g"],[0,"\n\n// Use"]],"start1":303,"start2":303,"length1":16,"length2":17}]],"length":6034,"saved":false}
{"ts":1354601233835,"patch":[[{"diffs":[[0,"sole.log"],[1,"(rtc.isCaller)"],[0,"\n\n// Use"]],"start1":304,"start2":304,"length1":16,"length2":30}]],"length":6048,"saved":false}
{"ts":1354601236868,"patch":[[{"diffs":[[0,"sCaller)"],[1,";"],[0,"\n\n// Use"]],"start1":318,"start2":318,"length1":16,"length2":17}]],"length":6049,"saved":false}
{"ts":1354601394885,"patch":[[{"diffs":[[0,"\n}\n\n"],[-1,"rtc.isCaller = 1;\nconsole.log(rtc.isCaller);\n"],[0,"\n// "]],"start1":279,"start2":279,"length1":53,"length2":8}]],"length":6004,"saved":false}
{"ts":1354601395770,"patch":[[{"diffs":[[0,"\n  }\n}\n\n"],[-1,"\n"],[0,"// Used "]],"start1":275,"start2":275,"length1":17,"length2":16}]],"length":6003,"saved":false}
{"ts":1354601400845,"patch":[[{"diffs":[[0,"= {};\n}\n"],[1,"rtc.isCaller = 1;\nconsole.log(rtc.isCaller);\n\n"],[0,"//Array "]],"start1":370,"start2":370,"length1":16,"length2":62}]],"length":6049,"saved":false}
{"ts":1354601401507,"patch":[[{"diffs":[[0,"= {};\n}\n"],[1,"\n"],[0,"rtc.isCa"]],"start1":370,"start2":370,"length1":16,"length2":17}]],"length":6050,"saved":false}
{"ts":1354601404267,"patch":[[{"diffs":[[0,"tc = {};\n}\n\n"],[1,"// cu\n"],[0,"rtc.isCaller"]],"start1":367,"start2":367,"length1":24,"length2":30}]],"length":6056,"saved":false}
{"ts":1354601405281,"patch":[[{"diffs":[[0,"}\n\n// cu"],[1,"s"],[0,"\nrtc.isC"]],"start1":376,"start2":376,"length1":16,"length2":17}]],"length":6057,"saved":false}
{"ts":1354601407144,"patch":[[{"diffs":[[0,"\n}\n\n// c"],[-1,"us"],[0,"\nrtc.isC"]],"start1":375,"start2":375,"length1":18,"length2":16}]],"length":6055,"saved":false}
{"ts":1354601409082,"patch":[[{"diffs":[[0,";\n}\n\n// "],[-1,"c"],[1,"swa"],[0,"\nrtc.isC"]],"start1":374,"start2":374,"length1":17,"length2":19}]],"length":6057,"saved":false}
{"ts":1354601410082,"patch":[[{"diffs":[[0,"\n\n// swa"],[1,"n"],[0,"\nrtc.isC"]],"start1":377,"start2":377,"length1":16,"length2":17}]],"length":6058,"saved":false}
{"ts":1354601411621,"patch":[[{"diffs":[[0,"\n// swan"],[1,"nlv "],[0,"\nrtc.isC"]],"start1":378,"start2":378,"length1":16,"length2":20}]],"length":6062,"saved":false}
{"ts":1354601414640,"patch":[[{"diffs":[[0,"swannlv "],[1,"custom"],[0,"\nrtc.isC"]],"start1":382,"start2":382,"length1":16,"length2":22}]],"length":6068,"saved":false}
{"ts":1354601423916,"patch":[[{"diffs":[[0,"= 1;"],[-1,"\nconsole.log(rtc.isCaller);"],[0,"\n\n//"]],"start1":410,"start2":410,"length1":35,"length2":8}]],"length":6041,"saved":false}
{"ts":1354601520654,"patch":[[{"diffs":[[0,"ler = 1;"],[1,"\nalert(rtc.isCaller);"],[0,"\n\n//Arra"]],"start1":406,"start2":406,"length1":16,"length2":37}]],"length":6062,"saved":false}
{"ts":1354601568313,"patch":[[{"diffs":[[0," 1;\n"],[-1,"alert"],[1,"console.log"],[0,"(rtc"]],"start1":411,"start2":411,"length1":13,"length2":19}]],"length":6068,"saved":false}
{"ts":1354601594855,"patch":[[{"diffs":[[0," custom\n"],[1,"console.log(rtc.isCaller);\n"],[0,"rtc.isCa"]],"start1":389,"start2":389,"length1":16,"length2":43}]],"length":6095,"saved":false}
{"ts":1354601854843,"patch":[[{"diffs":[[0,"Caller);"],[1,"*/"],[0,"\n\n//Arra"]],"start1":460,"start2":460,"length1":16,"length2":18}]],"length":6097,"saved":false}
{"ts":1354601857017,"patch":[[{"diffs":[[0,"v custom"],[1,"/*"],[0,"\nconsole"]],"start1":388,"start2":388,"length1":16,"length2":18}]],"length":6099,"saved":false}
{"ts":1354601865117,"patch":[[{"diffs":[[0,"cket) {\n    "],[1,"//"],[0,"rtc.isCaller"]],"start1":4567,"start2":4567,"length1":24,"length2":26}]],"length":6101,"saved":false}
{"ts":1354601956523,"patch":[[{"diffs":[[0,") {\n    "],[-1,"//"],[0,"rtc.isCa"]],"start1":4571,"start2":4571,"length1":18,"length2":16}]],"length":6099,"saved":false}
{"ts":1354602016934,"patch":[[{"diffs":[[0,"aller = "],[-1,"1"],[1,"{}"],[0,";\nconsol"]],"start1":433,"start2":433,"length1":17,"length2":18}]],"length":6100,"saved":false}
{"ts":1354602022638,"patch":[[{"diffs":[[0,"m/*\n"],[-1,"console.log(rtc.isCaller);\n"],[0,"rtc."]],"start1":395,"start2":395,"length1":35,"length2":8}]],"length":6073,"saved":false}
{"ts":1354602023979,"patch":[[{"diffs":[[0,"stom"],[-1,"/*"],[0,"\nrtc"]],"start1":392,"start2":392,"length1":10,"length2":8}]],"length":6071,"saved":false}
{"ts":1354602026020,"patch":[[{"diffs":[[0,"er);"],[-1,"*/"],[0,"\n\n//"]],"start1":438,"start2":438,"length1":10,"length2":8}]],"length":6069,"saved":false}
{"ts":1354602027989,"patch":[[{"diffs":[[0,"r = {};\n"],[1,"//"],[0,"console."]],"start1":408,"start2":408,"length1":16,"length2":18}]],"length":6071,"saved":false}
{"ts":1354602105898,"patch":[[{"diffs":[[0,"r = {};\n"],[1,"rtc.isCaller\n"],[0,"//consol"]],"start1":408,"start2":408,"length1":16,"length2":29}]],"length":6084,"saved":false}
{"ts":1354602107132,"patch":[[{"diffs":[[0,"isCaller"],[1," "],[0,"\n//conso"]],"start1":420,"start2":420,"length1":16,"length2":17}]],"length":6085,"saved":false}
{"ts":1354602107970,"patch":[[{"diffs":[[0,"sCaller "],[1,"="],[0,"\n//conso"]],"start1":421,"start2":421,"length1":16,"length2":17}]],"length":6086,"saved":false}
{"ts":1354602109639,"patch":[[{"diffs":[[0,"Caller ="],[1," 1;"],[0,"\n//conso"]],"start1":422,"start2":422,"length1":16,"length2":19}]],"length":6089,"saved":false}
{"ts":1354602424809,"patch":[[{"diffs":[[0,"ler = 1;"],[1,"*/"],[0,"\n//conso"]],"start1":425,"start2":425,"length1":16,"length2":18}]],"length":6091,"saved":false}
{"ts":1354602427165,"patch":[[{"diffs":[[0,"= 1;"],[-1,"*/"],[0,"\n//c"]],"start1":429,"start2":429,"length1":10,"length2":8}]],"length":6089,"saved":false}
{"ts":1354602440674,"patch":[[{"diffs":[[0,"v custom"],[1,"/*"],[0,"\nrtc.isC"]],"start1":388,"start2":388,"length1":16,"length2":18}]],"length":6091,"saved":false}
{"ts":1354602442830,"patch":[[{"diffs":[[0,"ler = 1;"],[1,"*/"],[0,"\n//conso"]],"start1":427,"start2":427,"length1":16,"length2":18}]],"length":6093,"saved":false}
{"ts":1354602444994,"patch":[[{"diffs":[[0,"v custom"],[1,"\n"],[0,"/*\nrtc.i"]],"start1":388,"start2":388,"length1":16,"length2":17}]],"length":6094,"saved":false}
{"ts":1354602837454,"patch":[[{"diffs":[[0,") {\n"],[-1,"    rtc.isCaller = 0;\n"],[0,"    "]],"start1":4566,"start2":4566,"length1":30,"length2":8}]],"length":6072,"saved":false}
{"ts":1354602848244,"patch":[[{"diffs":[[0,"\n}\n\n"],[-1,"// swannlv custom\n/*\nrtc.isCaller = {};\nrtc.isCaller = 1;*/\n//console.log(rtc.isCaller);\n\n"],[0,"//Ar"]],"start1":375,"start2":375,"length1":98,"length2":8}]],"length":5982,"saved":false}
{"ts":1354603566160,"patch":[[{"diffs":[[0,"r', rtc);\n  });\n"],[1,"git "],[0,"\n  //Receive ans"]],"start1":4886,"start2":4886,"length1":32,"length2":36}]],"length":5986,"saved":false}
{"ts":1354603568740,"patch":[[{"diffs":[[0,";\n  });\n"],[-1,"git "],[0,"\n  //Rec"]],"start1":4894,"start2":4894,"length1":20,"length2":16}]],"length":5982,"saved":false}
